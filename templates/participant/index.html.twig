{% extends 'layout.html.twig' %}

{% block body %}
	<div class="container mt-4">
		<div class="card shadow-lg bg-light p-4 position-relative mb-4 text-center">
			<h1>{{ 'participants' | trans }} - {{ poll.title }}</h1>
		</div>

		<div class="card shadow-lg p-4 position-relative">
			<form id="participants-form" method="post" action="{{ path('app_participant_update', { url: poll.url }) }}">
				<table class="table table-sm table-hover table-bordered">
					<thead>
						<tr>
							<th scope="col" class="table-secondary"></th> {# Poignée Drag & Drop #}
							<th scope="col" class="table-secondary">Nom</th>
							<th scope="col" class="table-secondary">Action</th>
						</tr>
					</thead>
					<tbody id="participants-list">
						{% for participant in poll.participants %}
							<tr data-id="{{ participant.id }}">
								<td class="handle text-center">
									<i class="bi bi-list fs-4" style="cursor: grab;"></i>
								</td>
								<td>
									<input type="text" name="participants[{{ participant.id }}][name]"
										value="{{ participant.name }}" class="form-control form-control-sm" required>
								</td>
								<td>
									<button type="button" class="btn btn-danger btn-sm delete-participant">Supprimer
									</button>
								</td>
							</tr>
						{% endfor %}
					</tbody>
				</table>

				{# Champ caché pour stocker les IDs des participants supprimés #}
				<input type="hidden" name="deleted_participants" id="deleted_participants">

				<div class="mb-3">
					<label for="new-participants" class="form-label">Ajouter un ou plusieurs participants (séparés par
						";")</label>
					<input type="text" id="new-participants" class="form-control">
					<button type="button" id="add-participants" class="btn btn-lg btn-success mt-2">Ajouter</button>
				</div>

				<div class="mb-3 row">
					<div class="offset-sm-2 col-sm-10">
						<button type="submit" class="btn btn-lg btn-danger btn-gradient m-2">
							<i class="bi bi-save me-2"></i>
							{{ 'save' | trans }}
						</button>
						<a role="button" class="btn btn-lg btn-secondary btn-gradient m-2"
							href="{{ path('app_poll_show', {url: poll.url}) }}">
							<i class="bi bi-skip-backward me-2"></i>
							{{ 'back' | trans }}
						</a>
					</div>
				</div>

			</form>
		</div>
	</div>

	<script src="https://cdnjs.cloudflare.com/ajax/libs/Sortable/1.15.2/Sortable.min.js"></script>
	<script>
		document.addEventListener('DOMContentLoaded', function () {
			let tbody = document.getElementById('participants-list');
			let deletedIds = [];
			let deletedInput = document.getElementById("deleted_participants");

			// Activation du drag & drop
			new Sortable(tbody, {
				animation: 150,
				ghostClass: 'sortable-ghost',
				handle: '.handle'
			});

			// Suppression d'un participant
			document.querySelectorAll('.delete-participant').forEach(button => {
				button.addEventListener('click', function () {
					const row = this.closest("tr");
					const id = row.dataset.id;
					// Si l'élément a un ID, on le marque pour suppression
					if (id) {
						deletedIds.push(id);
						deletedInput.value = JSON.stringify(deletedIds);
					}
					row.remove();
				});
			});

			// Ajout de nouveaux participants
			document.getElementById('add-participants').addEventListener('click', function () {
				let input = document.getElementById('new-participants');
				let names = input.value.split(';').map(name => name.trim()).filter(name => name);
				input.value = '';

				names.forEach(name => {
					if (name) {
						let row = document.createElement('tr');
						row.innerHTML = `
                    <td class="handle text-center"><i class="bi bi-list fs-4" style="cursor: grab;"></i></td>
                    <td><input type="text" name="new_participants[]" value="${name}" class="form-control form-control-sm" required></td>
                    <td><button type="button" class="btn btn-danger btn-sm delete-participant">Supprimer</button></td>
                `;
						tbody.appendChild(row);
						row.querySelector('.delete-participant').addEventListener('click', function () {
							this.closest('tr').remove();
						});
					}
				});
			});
		});
	</script>
{% endblock %}
